; ModuleID = 'main'
source_filename = "main"

@0 = private unnamed_addr constant [3 x i8] c"gg\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"ffff\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"f\00", align 1

declare i32 @printf(ptr, ...)

declare ptr @memcpy(ptr, ptr, i32)

declare noalias ptr @malloc(i32)

define i32 @main() {
entry:
  %n = alloca i64, align 8
  %ss = alloca { i32, ptr }, align 8
  store i64 10, ptr %n, align 4
  %0 = load i64, ptr %n, align 4
  %addtmp = add i64 %0, 1
  store i64 %addtmp, ptr %n, align 4
  %1 = call i32 @varf(ptr %n)
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ([2 x i8], ptr null, i32 1) to i32))
  %3 = call ptr @memcpy(ptr %2, ptr @0, i32 2)
  %4 = insertvalue { i32, ptr } { i32 2, ptr null }, ptr %2, 1
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ([4 x i8], ptr null, i32 1) to i32))
  %6 = call ptr @memcpy(ptr %5, ptr @1, i32 4)
  %7 = insertvalue { i32, ptr } { i32 4, ptr null }, ptr %5, 1
  %8 = extractvalue { i32, ptr } %7, 0
  %9 = extractvalue { i32, ptr } %4, 0
  %10 = add i32 %8, %9
  %11 = call ptr @malloc(i32 %10)
  %12 = extractvalue { i32, ptr } %7, 1
  %13 = call ptr @memcpy(ptr %11, ptr %12, i32 %8)
  %14 = getelementptr inbounds i8, ptr %11, i32 %8
  %15 = extractvalue { i32, ptr } %4, 1
  %16 = call ptr @memcpy(ptr %14, ptr %15, i32 %9)
  %17 = insertvalue { i32, ptr } zeroinitializer, i32 %10, 0
  %18 = insertvalue { i32, ptr } %17, ptr %11, 1
  store { i32, ptr } %18, ptr %ss, align 8
  ret i32 0
}

define i32 @foo({ i32, ptr } %bar, i64 %t, i1 %h, { i32, ptr } %s) {
entry:
  %n = alloca i64, align 8
  %ss = alloca { i32, ptr }, align 8
  store i64 40, ptr %n, align 4
  %0 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ([1 x i8], ptr null, i32 1) to i32))
  %1 = call ptr @memcpy(ptr %0, ptr @2, i32 1)
  %2 = insertvalue { i32, ptr } { i32 1, ptr null }, ptr %0, 1
  store { i32, ptr } %2, ptr %ss, align 8
  ret i32 0
}

define i32 @varf(ptr %foo) {
entry:
  store i64 5, ptr %foo, align 4
  ret i32 0
}
