; ModuleID = 'main'
source_filename = "main"

declare i32 @printf(ptr, ...)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @malloc(i32)

define i32 @main() {
entry:
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  br label %for.start

for.start:                                        ; preds = %for.inc, %entry
  %0 = load i64, ptr %a, align 4
  %1 = icmp sge i64 %0, 1
  %2 = icmp sle i64 %0, 10
  %3 = and i1 %1, %2
  br i1 %3, label %for.body, label %for.after

for.after:                                        ; preds = %for.start
  %4 = load i64, ptr %b, align 4
  %cmp = icmp eq i64 %4, 3
  br i1 %cmp, label %"if block", label %"else block"

for.body:                                         ; preds = %for.start
  store i64 3, ptr %b, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.start

"if block":                                       ; preds = %for.after
  store i64 4, ptr %b, align 4
  br label %"after if statement"

"else block":                                     ; preds = %for.after
  %5 = load i64, ptr %b, align 4
  %cmp1 = icmp eq i64 %5, 4
  br i1 %cmp1, label %"if block2", label %"else block3"

"after if statement":                             ; preds = %"after if statement4", %"if block"
  ret i32 0

"if block2":                                      ; preds = %"else block"
  store i64 5, ptr %b, align 4
  br label %"after if statement4"

"else block3":                                    ; preds = %"else block"
  store i64 3, ptr %b, align 4
  br label %"after if statement4"

"after if statement4":                            ; preds = %"else block3", %"if block2"
  br label %"after if statement"
}
